[gd_scene load_steps=19 format=2]

[sub_resource type="CubeMesh" id=1]
size = Vector3( 512, 2, 512 )

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 0.001 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=18]
constant = Color( 0.105882, 0.160784, 0.254902, 0.521569 )

[sub_resource type="VisualShaderNodeVectorLen" id=20]

[sub_resource type="VisualShaderNodeVectorOp" id=21]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=22]

[sub_resource type="VisualShaderNodeColorConstant" id=23]
constant = Color( 0.12549, 0.164706, 0.129412, 0.913725 )

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.3

[sub_resource type="OpenSimplexNoise" id=12]
octaves = 8
period = 128.0
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=13]
seamless = true
as_normalmap = true
bump_strength = 3.2
noise = SubResource( 12 )
noise_offset = Vector2( 0.007, 0 )

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 0

[sub_resource type="VisualShader" id=5]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Color:14
	vec3 n_out14p0 = vec3(0.105882, 0.160784, 0.254902);
	float n_out14p1 = 0.521569;

// Color:19
	vec3 n_out19p0 = vec3(0.125490, 0.164706, 0.129412);
	float n_out19p1 = 0.913725;

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:10
	float n_in10p1 = 0.00100;
	float n_out10p0 = n_out7p0 * n_in10p1;

// ScalarFunc:9
	float n_out9p0 = sin(n_out10p0);

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 + vec3(n_out9p0);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out12p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorMix:18
	vec3 n_out18p0 = mix(n_out14p0, n_out19p0, n_out6p0);

// VectorOp:17
	vec3 n_in17p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out17p0 = n_out6p0 * n_in17p1;

// VectorLen:16
	float n_out16p0 = length(n_out17p0);

// VectorOp:13
	vec3 n_out13p0 = n_out18p0 * vec3(n_out16p0);

// Output:0
	ALBEDO = n_out13p0;
	ALPHA = n_out14p1;
	ROUGHNESS = n_out16p0;
	SPECULAR = n_out16p0;
	NORMALMAP = n_out6p0;
	NORMALMAP_DEPTH = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -360.8, -248.301 )
nodes/vertex/0/position = Vector2( 300, 140 )
nodes/fragment/0/position = Vector2( 340, -40 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 0, 300 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( -580, 80 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( -1040, 180 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( -800, 200 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( -880, 360 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( -860, 100 )
nodes/fragment/12/node = SubResource( 11 )
nodes/fragment/12/position = Vector2( -620, 340 )
nodes/fragment/13/node = SubResource( 17 )
nodes/fragment/13/position = Vector2( 80, -120 )
nodes/fragment/14/node = SubResource( 18 )
nodes/fragment/14/position = Vector2( -200, 80 )
nodes/fragment/16/node = SubResource( 20 )
nodes/fragment/16/position = Vector2( -360, -200 )
nodes/fragment/17/node = SubResource( 21 )
nodes/fragment/17/position = Vector2( -520, -100 )
nodes/fragment/18/node = SubResource( 22 )
nodes/fragment/18/position = Vector2( 20, -280 )
nodes/fragment/19/node = SubResource( 23 )
nodes/fragment/19/position = Vector2( -180, -20 )
nodes/fragment/connections = PoolIntArray( 7, 0, 10, 0, 10, 0, 9, 0, 11, 0, 12, 0, 9, 0, 12, 1, 12, 0, 6, 0, 6, 0, 0, 8, 6, 1, 0, 9, 16, 0, 13, 1, 6, 0, 17, 0, 17, 0, 16, 0, 18, 0, 13, 0, 6, 0, 18, 2, 19, 0, 18, 1, 14, 0, 18, 0, 13, 0, 0, 0, 16, 0, 0, 3, 16, 0, 0, 4, 14, 1, 0, 1 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[node name="water" type="MeshInstance"]
transform = Transform( 0.7573, 0, 0, 0, 0.203058, 0, 0, 0, 0.7573, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 6 )
